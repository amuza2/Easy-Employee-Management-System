// <auto-generated />
using System;
using EEMS.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EEMS.DataAccess.Migrations
{
    [DbContext(typeof(EEMSDbContext))]
    [Migration("20250429203026_editedToJobNatureItemsInModelAndCorrectedLicenseSyntax")]
    partial class editedToJobNatureItemsInModelAndCorrectedLicenseSyntax
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EEMS.DataAccess.Models.Absence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("HasJustification")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.Condidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ClearedFromNationalService")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EssentialTraining")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FamilySituation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasDrivingLicense")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HusbandFullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HusbandJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InterviewDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<int?>("JobNatureId")
                        .HasColumnType("int");

                    b.Property<string>("JobNatureItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("KnowMicrosoftOfficeSoftware")
                        .HasColumnType("bit");

                    b.Property<string>("LanguagesSpoken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NationalCardNumberReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NationalServiceDateSuspendedFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NationalServiceDateSuspendedTo")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NationalServiceSuitableNotIncorporated")
                        .HasColumnType("bit");

                    b.Property<int?>("NumberOfBrothersAndSisters")
                        .HasColumnType("int");

                    b.Property<int?>("OpenedJobId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Residence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialSecurityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Training")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobNatureId");

                    b.HasIndex("OpenedJobId");

                    b.ToTable("Condidates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "وسط الجزائر العاصمة",
                            BankAccountNumber = "1234567890123456",
                            BirthLocation = "الجزائر العاصمة",
                            BloodGroup = "APlus",
                            ClearedFromNationalService = true,
                            DateOfBirth = new DateTime(1995, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahmed.benali@example.com",
                            EssentialTraining = "تطوير البرمجيات",
                            Experience = 3,
                            FamilySituation = "Single",
                            FatherFullName = "محمد بن علي",
                            FatherJob = "مهندس",
                            FirstName = "أحمد",
                            Gender = "Male",
                            HasDrivingLicense = "Have",
                            InterviewDate = new DateTime(2025, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            KnowMicrosoftOfficeSoftware = true,
                            LanguagesSpoken = "العربية، الفرنسية، الإنجليزية",
                            LastName = "بن علي",
                            MotherFullName = "فاطمة بوزيد",
                            MotherJob = "معلمة",
                            NationalCardNumber = "123456789",
                            NationalCardNumberReleaseDate = new DateTime(2019, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfBrothersAndSisters = 2,
                            OpenedJobId = 1,
                            Phone = "0550123456",
                            Residence = "الجزائر العاصمة",
                            SocialSecurityNumber = "9876543210",
                            Training = "هندسة البرمجيات"
                        },
                        new
                        {
                            Id = 2,
                            Address = "وسط مدينة وهران",
                            BankAccountNumber = "9876543210987654",
                            BirthLocation = "وهران",
                            BloodGroup = "BPlus",
                            DateOfBirth = new DateTime(1998, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara.boualem@example.com",
                            EssentialTraining = "إدارة المشاريع",
                            Experience = 1,
                            FamilySituation = "Single",
                            FatherFullName = "عبد القادر بوعلام",
                            FatherJob = "طبيب",
                            FirstName = "سارة",
                            Gender = "Female",
                            HasDrivingLicense = "NotHave",
                            InterviewDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            KnowMicrosoftOfficeSoftware = true,
                            LanguagesSpoken = "العربية، الفرنسية",
                            LastName = "بوعلام",
                            MotherFullName = "سميرة شريف",
                            MotherJob = "ربة منزل",
                            NationalCardNumber = "987654321",
                            NationalCardNumberReleaseDate = new DateTime(2016, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfBrothersAndSisters = 1,
                            OpenedJobId = 2,
                            Phone = "0550987654",
                            Residence = "وهران",
                            SocialSecurityNumber = "1234567890",
                            Training = "إدارة الأعمال"
                        },
                        new
                        {
                            Id = 3,
                            Address = "وسط مدينة قسنطينة",
                            BankAccountNumber = "1122334455667788",
                            BirthLocation = "قسنطينة",
                            BloodGroup = "OPlus",
                            ClearedFromNationalService = true,
                            DateOfBirth = new DateTime(1993, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mohamed.lamine@example.com",
                            EssentialTraining = "صيانة المعدات الكهربائية",
                            Experience = 5,
                            FamilySituation = "Married",
                            FatherFullName = "علي لمين",
                            FatherJob = "محاسب",
                            FirstName = "محمد",
                            Gender = "Male",
                            HasDrivingLicense = "Have",
                            InterviewDate = new DateTime(2025, 5, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            KnowMicrosoftOfficeSoftware = false,
                            LanguagesSpoken = "العربية، الفرنسية",
                            LastName = "لمين",
                            MotherFullName = "زهرة بلقاسم",
                            MotherJob = "ممرضة",
                            NationalCardNumber = "112233445",
                            NationalCardNumberReleaseDate = new DateTime(2012, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfBrothersAndSisters = 3,
                            OpenedJobId = 1,
                            Phone = "0770123456",
                            Residence = "قسنطينة",
                            SocialSecurityNumber = "1122334455",
                            Training = "الهندسة الكهربائية"
                        },
                        new
                        {
                            Id = 4,
                            Address = "حي 100 مسكن سطيف",
                            BankAccountNumber = "6677889900112233",
                            BirthLocation = "سطيف",
                            BloodGroup = "ABPlus",
                            DateOfBirth = new DateTime(1996, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khadija.yassine@example.com",
                            EssentialTraining = "الإسعافات الأولية",
                            Experience = 2,
                            FamilySituation = "Single",
                            FatherFullName = "عبد الله ياسين",
                            FatherJob = "مقاول",
                            FirstName = "خديجة",
                            Gender = "Female",
                            HasDrivingLicense = "NotHave",
                            InterviewDate = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            KnowMicrosoftOfficeSoftware = true,
                            LanguagesSpoken = "العربية، الفرنسية",
                            LastName = "ياسين",
                            MotherFullName = "ليلى بوخديمي",
                            MotherJob = "مدرسة",
                            NationalCardNumber = "556677889",
                            NationalCardNumberReleaseDate = new DateTime(2015, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfBrothersAndSisters = 4,
                            OpenedJobId = 3,
                            Phone = "0660987654",
                            Residence = "سطيف",
                            SocialSecurityNumber = "5566778899",
                            Training = "التمريض"
                        },
                        new
                        {
                            Id = 5,
                            Address = "وسط مدينة عنابة",
                            BankAccountNumber = "4455667788990011",
                            BirthLocation = "عنابة",
                            BloodGroup = "BMinus",
                            ClearedFromNationalService = true,
                            DateOfBirth = new DateTime(1990, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "abderrahmane.cherif@example.com",
                            EssentialTraining = "ميكانيك السيارات",
                            Experience = 7,
                            FamilySituation = "Married",
                            FatherFullName = "مصطفى شريف",
                            FatherJob = "فني صيانة",
                            FirstName = "عبد الرحمن",
                            Gender = "Male",
                            HasDrivingLicense = "Have",
                            InterviewDate = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            KnowMicrosoftOfficeSoftware = false,
                            LanguagesSpoken = "العربية",
                            LastName = "شريف",
                            MotherFullName = "نوال دحماني",
                            MotherJob = "ربة منزل",
                            NationalCardNumber = "334455667",
                            NationalCardNumberReleaseDate = new DateTime(2010, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfBrothersAndSisters = 5,
                            OpenedJobId = 2,
                            Phone = "0770887766",
                            Residence = "عنابة",
                            SocialSecurityNumber = "3344556677",
                            Training = "الميكانيك"
                        });
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Human Resources"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Budget and Accounting"
                        },
                        new
                        {
                            Id = 3,
                            Name = "General Administration"
                        });
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EssentialTraining")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FamilySituation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<int?>("JobNatureId")
                        .HasColumnType("int");

                    b.Property<string>("JobNatureItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguagesSpoken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecruitmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Residence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Training")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobNatureId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "شارع الملك عبدالعزيز، الرياض",
                            BirthLocation = "الرياض",
                            DateOfBirth = new DateTime(1995, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "ahmad@example.com",
                            EssentialTraining = "ASP.NET Core",
                            Experience = 3,
                            FamilySituation = "Single",
                            FirstName = "أحمد",
                            Gender = "Male",
                            IsActive = "Active",
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            JobTitle = "مهندس برمجيات",
                            LanguagesSpoken = "العربية، الإنجليزية",
                            LastName = "الزيدي",
                            Phone = "0599988776",
                            RecruitmentDate = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Residence = "الرياض",
                            Training = "تدريب في تطوير الويب"
                        },
                        new
                        {
                            Id = 2,
                            Address = "حي الشاطئ، جدة",
                            BirthLocation = "جدة",
                            DateOfBirth = new DateTime(1992, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "sara@example.com",
                            EssentialTraining = "UML، تحليل البيانات",
                            Experience = 5,
                            FamilySituation = "Married",
                            FirstName = "سارة",
                            Gender = "Female",
                            IsActive = "Active",
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            JobTitle = "محللة نظم",
                            LanguagesSpoken = "العربية",
                            LastName = "العتيبي",
                            Phone = "0501122334",
                            RecruitmentDate = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Residence = "جدة",
                            Training = "تحليل نظم المعلومات"
                        },
                        new
                        {
                            Id = 3,
                            Address = "حي الفيصلية، الدمام",
                            BirthLocation = "الدمام",
                            DateOfBirth = new DateTime(1988, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Email = "khaled.anazi@example.com",
                            EssentialTraining = "إدارة فرق العمل، PMP",
                            Experience = 10,
                            FamilySituation = "Married",
                            FirstName = "خالد",
                            Gender = "Male",
                            IsActive = "Active",
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            JobTitle = "مدير مشاريع",
                            LanguagesSpoken = "العربية، الإنجليزية",
                            LastName = "العنزي",
                            Phone = "0567788990",
                            RecruitmentDate = new DateTime(2020, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Residence = "الدمام",
                            Training = "إدارة المشاريع الاحترافية (PMP)"
                        },
                        new
                        {
                            Id = 4,
                            Address = "حي العزيزية، مكة",
                            BirthLocation = "مكة",
                            DateOfBirth = new DateTime(1996, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Email = "nada.harbi@example.com",
                            EssentialTraining = "Adobe Photoshop، Figma",
                            Experience = 2,
                            FamilySituation = "Single",
                            FirstName = "ندى",
                            Gender = "Female",
                            IsActive = "Active",
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            JobTitle = "مصممة جرافيك",
                            LanguagesSpoken = "العربية، الإنجليزية",
                            LastName = "الحربي",
                            Phone = "0553344556",
                            RecruitmentDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Residence = "مكة",
                            Training = "دورات Adobe و UI/UX"
                        },
                        new
                        {
                            Id = 5,
                            Address = "حي المنسك، أبها",
                            BirthLocation = "أبها",
                            DateOfBirth = new DateTime(1990, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "fahad.shahri@example.com",
                            EssentialTraining = "أمن الشبكات",
                            Experience = 8,
                            FamilySituation = "Married",
                            FirstName = "فهد",
                            Gender = "Male",
                            IsActive = "Inactive",
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            JobTitle = "أخصائي شبكات",
                            LanguagesSpoken = "العربية",
                            LastName = "الشهري",
                            Phone = "0531122334",
                            RecruitmentDate = new DateTime(2019, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Residence = "أبها",
                            Training = "CCNA، أمن الشبكات"
                        },
                        new
                        {
                            Id = 6,
                            Address = "حي اليرموك، الخبر",
                            BirthLocation = "الخبر",
                            DateOfBirth = new DateTime(1994, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "reem.subaie@example.com",
                            EssentialTraining = "تخطيط الموارد، تقييم الأداء",
                            Experience = 4,
                            FamilySituation = "Divorced",
                            FirstName = "ريم",
                            Gender = "Female",
                            IsActive = "Active",
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            JobTitle = "أخصائية موارد بشرية",
                            LanguagesSpoken = "العربية، الإنجليزية",
                            LastName = "السبيعي",
                            Phone = "0504455667",
                            RecruitmentDate = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Residence = "الخبر",
                            Training = "إدارة الموارد البشرية، تقييم الأداء"
                        },
                        new
                        {
                            Id = 7,
                            Address = "حي النهضة، نجران",
                            BirthLocation = "نجران",
                            DateOfBirth = new DateTime(1985, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Email = "mazen.yami@example.com",
                            EssentialTraining = "تدقيق مالي",
                            Experience = 12,
                            FamilySituation = "Widowed",
                            FirstName = "مازن",
                            Gender = "Male",
                            IsActive = "Active",
                            IsArchived = false,
                            JobNatureItem = "FullTime",
                            JobTitle = "محاسب",
                            LanguagesSpoken = "العربية",
                            LastName = "اليامي",
                            Phone = "0542211334",
                            RecruitmentDate = new DateTime(2018, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Residence = "نجران",
                            Training = "معايير IFRS، تدقيق داخلي"
                        });
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.JobNature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobNatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Full-time Work"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Part-time Work"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Temporary Work"
                        });
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.OpenedJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Openedjobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Name = "Software Engineer"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 1,
                            Name = "Network Specialist"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 1,
                            Name = "HR Specialist"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 2,
                            Name = "Accountant"
                        });
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.Absence", b =>
                {
                    b.HasOne("EEMS.DataAccess.Models.Employee", "Employee")
                        .WithMany("Absences")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.Condidate", b =>
                {
                    b.HasOne("EEMS.DataAccess.Models.JobNature", null)
                        .WithMany("Condidates")
                        .HasForeignKey("JobNatureId");

                    b.HasOne("EEMS.DataAccess.Models.OpenedJob", "OpenedJob")
                        .WithMany("Condidates")
                        .HasForeignKey("OpenedJobId");

                    b.Navigation("OpenedJob");
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.Employee", b =>
                {
                    b.HasOne("EEMS.DataAccess.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("EEMS.DataAccess.Models.JobNature", null)
                        .WithMany("Employees")
                        .HasForeignKey("JobNatureId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.OpenedJob", b =>
                {
                    b.HasOne("EEMS.DataAccess.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.Employee", b =>
                {
                    b.Navigation("Absences");
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.JobNature", b =>
                {
                    b.Navigation("Condidates");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EEMS.DataAccess.Models.OpenedJob", b =>
                {
                    b.Navigation("Condidates");
                });
#pragma warning restore 612, 618
        }
    }
}
